{"version":3,"sources":["ng://@sedeh/tagger/src/app/tagger/tagger.service.ts","ng://@sedeh/tagger/src/app/tagger/tagger.directive.ts","ng://@sedeh/tagger/src/app/tagger/tagger.module.ts"],"names":["TaggerService","storage","this","prototype","tagItem","id","info","item","getTaggedItems","push","session","setItem","releaseTaggedItem","i","indexOfTaggedItem","splice","items","result","length","taggedItem","map","indexOf","hasTaggedItem","getItem","setTaggedItems","list","Injectable","args","providedIn","WizardStorageService","taggerComponent","renderer","el","EventEmitter","keyup","event","which","target","click","position","top","left","size","setStyle","nativeElement","showTagger","flag","removeClass","addClass","Component","selector","template","Renderer2","ElementRef","Output","TaggerDirective","viewRef","resolver","taggerService","setAttribute","componentFactory","resolveComponentFactory","componentRef","createComponent","domElem","rootNodes","appendChild","taggerBox","change","subscribe","onTagSelect","bind","focus","enter","tagged","tagger","taggedClass","taggableClass","hoverOut","sticky","rect","getBoundingClientRect","x","clientX","width","y","clientY","height","ngOnInit","split","s","taggerSize","taggerTag","JSON","stringify","tagIt","taggedIt","dateEnabled","tagDate","Date","taggerChanged","emit","Directive","ViewContainerRef","ComponentFactoryResolver","Input","HostListener","TaggerModule","NgModule","imports","CommonModule","WizardStorageModule","declarations","exports","entryComponents","providers","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["/*\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport { WizardStorageService } from '@sedeh/wizard-storage';\r\n\r\nexport interface TagInfo {\r\n    tagDate: Date,\r\n    taggedItem: any\r\n}\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TaggerService {\r\n\r\n    constructor(private storage: WizardStorageService){}\r\n\r\n    tagItem(id: string, info: any) {\r\n        const item = this.getTaggedItems(id);\r\n        if (item) { \r\n            item.push(info);\r\n            this.storage.session.setItem(id, item);\r\n        } else {\r\n            this.storage.session.setItem(id, [info]);\r\n        }\r\n    }\r\n    releaseTaggedItem(id: string, info: any) {\r\n        const item = this.getTaggedItems(id);\r\n        if (item) { \r\n            const i = this.indexOfTaggedItem(id, info);\r\n            if (i >= 0) {\r\n                item.splice(i, i+1);\r\n                this.storage.session.setItem(id, item);\r\n            }\r\n        } else {\r\n            this.storage.session.setItem(id, []);\r\n        }\r\n    }\r\n    indexOfTaggedItem(id: string, info: any){\r\n        const items = this.getTaggedItems(id);\r\n        let result = -1;\r\n        if (items && items.length) { \r\n            const x = items[0];\r\n            if (x.taggedItem) {\r\n                items.map(\r\n                    (item: TagInfo, i: number) => {\r\n                        if (item.taggedItem == info) {\r\n                            result = i;\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                result = items.indexOf(info);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasTaggedItem(id: string,info: any) {\r\n        return this.indexOfTaggedItem(id, info) >= 0;\r\n    }\r\n\r\n    getTaggedItems(id: string) {\r\n        return this.storage.session.getItem(id);\r\n    }\r\n\r\n    setTaggedItems(id: string, list: any[]) {\r\n        this.storage.session.setItem(id, list);\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    Component,\r\n    ElementRef,\r\n    ViewContainerRef,\r\n    Input,\r\n    Output,\r\n    OnInit,\r\n    EventEmitter,\r\n    HostListener,\r\n    Renderer2,\r\n    ComponentRef,\r\n    EmbeddedViewRef,\r\n    ComponentFactoryResolver\r\n} from '@angular/core';\r\nimport { TagInfo, TaggerService } from './tagger.service';\r\n\r\n@Component({\r\n    selector: 'taggerBox',\r\n    template: `\r\n    <span \r\n        class=\"tagger\" \r\n        tabindex=\"0\" \r\n        (mouseleave)=\"$event.target.blur()\"\r\n        (keyup)=\"keyup($event)\"\r\n        (click)=\"change.emit($event)\">\r\n        <span class=\"{{taggedClass}}\" aria-hidden=\"true\"></span>\r\n    <span class=\"toot-tip\" [textContent]=\"tagged ? taggedIt : tagIt\"></span>\r\n    </span>\r\n    `,\r\n    styles: [\r\n        `:host{width:14px;height:14px;position:absolute;color:#fff;z-index:2;cursor:pointer}`,\r\n        `:host.hidden{\r\n            top: -9999px !important;\r\n            left:-9999px !important;\r\n        }`,\r\n        `:host .toot-tip{\r\n            display:table;\r\n            border-radius: 5px;\r\n            box-shadow:0px 0px 6px #fff;\r\n            white-space: nowrap;\r\n            font-size:0.8rem;\r\n            background-color:#000;\r\n            color:#fff;\r\n            padding: 2px 7px;\r\n            position:absolute;\r\n            z-index:2;\r\n            top: 30px;\r\n            left: -99999px;}`,\r\n        `:host .tagger:hover .toot-tip{left: 0}`,\r\n        `:host .tagger:focus .toot-tip{left: 0}`,\r\n        `:host .tagger:hover{color: red}`,\r\n        `:host .tagger:focus{color: red}`\r\n    ],\r\n})\r\nexport class taggerComponent {\r\n    show = false\r\n    tagged = false;\r\n    taggedClass: string;\r\n    tagIt: string;\r\n    taggedIt: string;\r\n    @Output() change = new EventEmitter();\r\n    constructor(private renderer: Renderer2,public el:ElementRef){}\r\n    keyup(event:any){if(event.which == 13){event.target.click()}}\r\n    position(top: string, left: string, size: string) {\r\n        this.renderer.setStyle(this.el.nativeElement,'top', top);\r\n        this.renderer.setStyle(this.el.nativeElement,'left', left);\r\n        this.renderer.setStyle(this.el.nativeElement,'font-size', size); \r\n    }\r\n    showTagger(flag: boolean) {\r\n        if (flag) {\r\n            this.renderer.removeClass(this.el.nativeElement, 'hidden');\r\n        } else {\r\n            this.renderer.addClass(this.el.nativeElement, 'hidden');\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[tagger]'\r\n})\r\nexport class TaggerDirective implements OnInit {\r\n    private taggerBox: any;\r\n\r\n    @Input() taggedClass = 'fa fa-minus-square';\r\n    @Input() taggableClass = 'fa fa-tag';\r\n    @Input() tagger: string;\r\n    @Input() taggerSize = 24;\r\n    @Input() position = 'top:left';\r\n    @Input() taggerTag: any;\r\n    @Input() dateEnabled = false;\r\n    @Input() sticky = false;\r\n    @Input() tagIt = 'tag it';\r\n    @Input() taggedIt = 'tagged it';\r\n \r\n    @Output(\"taggerChanged\")\r\n    taggerChanged = new EventEmitter();\r\n\r\n    @HostListener('focus',['$event'])\r\n\tfocus(event: any) {\r\n        this.taggerBox.showTagger(true);\r\n    }\r\n    @HostListener('mouseenter',['$event'])\r\n\tenter(event: any) {\r\n        this.taggerBox.tagged = this.taggerService.hasTaggedItem(this.tagger, this.taggerBox.id);\r\n        this.taggerBox.taggedClass = this.taggerBox.tagged ? this.taggedClass : this.taggableClass;\r\n        this.taggerBox.showTagger(true);\r\n    }\r\n    @HostListener('mouseout',['$event'])\r\n\thoverOut(event: any) {\r\n        if (!this.sticky && !event.target.showTagger) {\r\n            const rect = this.el.nativeElement.getBoundingClientRect();\r\n            if (event.x < rect.x ||\r\n                event.clientX >= (rect.x + rect.width) || \r\n                event.y < rect.y || \r\n                event.clientY >= (rect.y + rect.height)\r\n                ) {\r\n                this.taggerBox.showTagger(false);\r\n            }\r\n        }\r\n    }\r\n    constructor(\r\n        public el:ElementRef,\r\n        private viewRef: ViewContainerRef,\r\n        private resolver: ComponentFactoryResolver,\r\n        private taggerService: TaggerService,\r\n        private renderer: Renderer2\r\n    ) {\r\n        this.renderer.setStyle(this.el.nativeElement,'display','table');\r\n        this.renderer.setStyle(this.el.nativeElement,'position','relative');\r\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\r\n        let componentFactory = this.resolver.resolveComponentFactory(taggerComponent);\r\n        const componentRef: ComponentRef<any> = this.viewRef.createComponent(componentFactory);\r\n        const domElem = (componentRef.hostView as EmbeddedViewRef < any > ).rootNodes[0] as HTMLElement;\r\n        this.el.nativeElement.appendChild(domElem);\r\n        this.taggerBox = (<taggerComponent>componentRef.instance);\r\n\r\n        this.taggerBox.change.subscribe(this.onTagSelect.bind(this));\r\n    }\r\n    \r\n\tngOnInit() {\r\n        const x = this.position.split(':');\r\n        const s = (this.taggerSize + 2) + 'px';\r\n        const top = x[0] === 'top' ? '5px' : (x[0] === 'bottom' ? 'calc(100% - '+s+')' : 'calc((100% - '+s+')/2)');\r\n        const left = x[1] === 'left' ? '5px' : (x[1] === 'right' ? 'calc(100% - '+s+')' : 'calc((100% - '+s+')/2)');\r\n        this.taggerBox.position(top, left, this.taggerSize + 'px');\r\n        this.taggerBox.id = (typeof this.taggerTag === 'object') ? JSON.stringify(this.taggerTag) : this.taggerTag;\r\n        this.taggerBox.tagged = this.taggerService.hasTaggedItem(this.tagger, this.taggerBox.id);\r\n        this.taggerBox.taggedClass = this.taggerBox.tagged ? this.taggedClass : this.taggableClass;\r\n        this.taggerBox.tagIt = this.tagIt;\r\n        this.taggerBox.taggedIt = this.taggedIt;\r\n        this.taggerBox.showTagger(this.sticky);\r\n    }\r\n    onTagSelect(event:any) {\r\n        this.taggerBox.tagged = !this.taggerBox.tagged;\r\n        this.taggerBox.taggedClass = this.taggerBox.tagged ? this.taggedClass : this.taggableClass;\r\n        if (this.taggerBox.tagged) {\r\n            if (this.dateEnabled) {\r\n                const info: TagInfo = {taggedItem: this.taggerBox.id, tagDate: new Date()};\r\n                this.taggerService.tagItem(this.tagger, info);\r\n            } else {\r\n                this.taggerService.tagItem(this.tagger, this.taggerBox.id);\r\n            }\r\n        } else {\r\n            this.taggerService.releaseTaggedItem(this.tagger, this.taggerBox.id);\r\n        }\r\n        if (this.dateEnabled) {\r\n            this.taggerChanged.emit({\r\n                tagger: this.tagger,\r\n                taggedItem:this.taggerBox.id,\r\n                tagDate: new Date()\r\n            });\r\n        } else {\r\n            this.taggerChanged.emit(this.tagger);\r\n        }\r\n    }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WizardStorageModule } from '@sedeh/wizard-storage';\r\n\r\nimport { taggerComponent, TaggerDirective } from './tagger.directive';\r\nimport { TaggerService } from './tagger.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    WizardStorageModule\r\n  ],\r\n  declarations: [\r\n\t  taggerComponent,\r\n    TaggerDirective\r\n  ],\r\n  exports: [\r\n    TaggerDirective\r\n  ],\r\n  entryComponents: [\r\n    taggerComponent\r\n  ],\r\n  providers: [\r\n    TaggerService\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class TaggerModule {}\r\n"]}